<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.creditharmony.fortune.borrow.dao.LoanphaseDao">
	<resultMap id="BaseResultMap"
		type="com.creditharmony.fortune.borrow.entity.Loanphase">
		<id column="phase_id" property="phaseId" jdbcType="VARCHAR" />
		<result column="matching_id" property="matchingId" jdbcType="VARCHAR" />
		<result column="loan_code" property="loanCode" jdbcType="VARCHAR" />
		<result column="lend_code" property="lendCode" jdbcType="VARCHAR" />
		<result column="phase_number" property="phaseNumber" jdbcType="INTEGER" />
		<result column="phase_amount" property="phaseAmount" jdbcType="NUMERIC" />
		<result column="phase_interest_cur" property="phaseInterestCur" jdbcType="NUMERIC" />
		<result column="phase_principal_cur" property="phasePrincipalCur" jdbcType="NUMERIC" />
		<result column="phase_principal_surplus" property="phasePrincipalSurplus" jdbcType="NUMERIC" />
		<result column="phase_repay_sign" property="phaseRepaySign" jdbcType="VARCHAR" />
		<result column="phase_repaydate_actual" property="phaseRepaydateActual" jdbcType="TIMESTAMP" />
		<result column="phase_back_count" property="phaseBackCount" jdbcType="NUMERIC" />
		<result column="phase_back_principal" property="phaseBackPrincipal" jdbcType="NUMERIC" />
		<result column="phase_back_interest" property="phaseBackInterest" jdbcType="NUMERIC" />
		<result column="phase_beginday_cur" property="phaseBegindayCur" jdbcType="TIMESTAMP" />
		<result column="phase_endday_cur" property="phaseEnddayCur" jdbcType="TIMESTAMP" />
		<result column="phase_mate_id" property="phaseMateId" jdbcType="VARCHAR" />
		<result column="phase_mate_number" property="phaseMateNumber" jdbcType="INTEGER" />
		<result column="phase_number_surplus" property="phaseNumberSurplus" jdbcType="INTEGER" />
		<result column="phase_discard_status" property="phaseDiscardStatus" jdbcType="VARCHAR" />
		<result column="phase_release_status" property="phaseReleaseStatus" jdbcType="VARCHAR" />
		<result column="phase_freeze_nextstatus" property="phaseFreezeNextstatus" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_by" property="modifyBy" jdbcType="VARCHAR" />
		<result column="bill_day" property="billDay" jdbcType="DATE" />
		
	</resultMap>
	<insert id="insert" parameterType="com.creditharmony.fortune.borrow.entity.Loanphase">
		insert into t_tz_loanphase (phase_id, matching_id, loan_code,
		lend_code, phase_number, phase_amount,
		phase_interest_cur, phase_principal_cur, phase_principal_surplus,
		phase_repay_sign, phase_repaydate_actual,
		phase_back_count, phase_back_principal, phase_back_interest,
		phase_beginday_cur, phase_endday_cur, phase_mate_id,
		phase_mate_number, phase_number_surplus, phase_discard_status,
		phase_release_status, phase_freeze_nextstatus,
		create_by, create_time, modify_by,
		modify_time,bill_day)
		values (#{phaseId,jdbcType=VARCHAR}, #{matchingId,jdbcType=VARCHAR},
		#{loanCode,jdbcType=VARCHAR},
		#{lendCode,jdbcType=VARCHAR}, #{phaseNumber,jdbcType=INTEGER}, #{phaseAmount,jdbcType=NUMERIC},
		#{phaseInterestCur,jdbcType=NUMERIC},
		#{phasePrincipalCur,jdbcType=NUMERIC},
		#{phasePrincipalSurplus,jdbcType=NUMERIC},
		#{phaseRepaySign,jdbcType=VARCHAR},
		#{phaseRepaydateActual,jdbcType=TIMESTAMP},
		#{phaseBackCount,jdbcType=NUMERIC},
		#{phaseBackPrincipal,jdbcType=NUMERIC},
		#{phaseBackInterest,jdbcType=NUMERIC},
		#{phaseBegindayCur,jdbcType=TIMESTAMP},
		#{phaseEnddayCur,jdbcType=TIMESTAMP}, #{phaseMateId,jdbcType=VARCHAR},
		#{phaseMateNumber,jdbcType=INTEGER},
		#{phaseNumberSurplus,jdbcType=INTEGER},
		#{phaseDiscardStatus,jdbcType=VARCHAR},
		#{phaseReleaseStatus,jdbcType=VARCHAR},
		#{phaseFreezeNextstatus,jdbcType=VARCHAR},
		#{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{modifyBy,jdbcType=VARCHAR},
		#{modifyTime,jdbcType=TIMESTAMP},
		#{billDay,jdbcType=DATE}
		)
	</insert>
	<!-- 根据出借编号获得月还本金的和 -->
	<select id="findAllMoney" parameterType="java.util.Map"
		resultType="java.math.BigDecimal">
		select sum(phase_amount) from tz.t_tz_loanphase where lend_code=#{lendCode};
	</select>

	<!--根据 查询分期收益 -->
	<select id="findLoanphase" parameterType="java.util.Map"
		resultType="com.creditharmony.fortune.borrow.entity.Loanphase">
		select * from tz.t_tz_loanphase
		<where>
			<if test="loanCode != null and loanCode != '' ">
				AND loan_code = #{loanCode}
			</if>
			<if test="lendCode != null and lendCode != '' ">
				AND lend_code = #{lendCode}
			</if>
			<if test="phaseNumber != null and phaseNumber != '' ">
				AND phase_number = #{phaseNumber}
			</if>
			<if test="matchingId != null and matchingId != '' ">
				AND matching_id = #{matchingId}
			</if>
			<if test="phaseDiscardStatus != null and phaseDiscardStatus != '' ">
				AND phase_discard_status = #{phaseDiscardStatus}
			</if>
		</where>
	</select>
	<!-- 通过待推荐ID获取借款人编号集合 -->
	<select id="getLoanIdsbyMatchingId" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT
		DISTINCT bo.LOAN_ID
		FROM
		T_TZ_LOANPHASE lo LEFT JOIN T_TZ_BORROW bo
		ON lo.loan_code = bo.credit_value_id
		WHERE
		lo.matching_id=#{matchingId}
	</select>
	<!-- 通过债权推荐ID获取既有及历史债权列表 非月满盈首期 -->
	<select id="getLoanphaseBorrow"
		resultType="com.creditharmony.fortune.creditor.matching.view.LoanphaseBorrowView"
		parameterType="java.lang.String">
		select
		bo.credit_value_id as "creditValueId",
		bo.loan_name as "loanName",
		bo.loan_code as "loanCode",
		bo.loan_idcard as "loanIdcard",
		bo.dict_loan_type as "dictLoanType",
		bo.loan_trustee_flag as "loanTrusteeFlag",
		bo.loan_product as "loanProduct",
		bo.loan_purpose as "loanPurpose",
		bo.loan_outmoney_day as "loanOutmoneyDay",
		bo.loan_job as "loanJob",
		bo.loan_backmoney_firday as "loanBackmoneyFirday",
		bo.loan_backmoney_day as "loanBackmoneyDay",
		bo.loan_months as "loanMonths",
		bo.loan_months_surplus as "loanMonthsSurplus",
		bo.loan_backmoney_lastday as "loanBackmoneyLastday",
		bo.loan_month_rate as "loanMonthRate",
		bo.loan_value_year as "loanValueYear",
		bo.dict_loan_free_flag as "dictLoanFreeFlag",
		bo.loan_quota as "loanQuota",
		bo.loan_credit_value as "loanCreditValue",
		bo.loan_middle_man as "loanMiddleMan",
		lo.phase_number_surplus as "phaseNumberSurplus",
		lo.phase_principal_surplus as "phasePrincipalSurplus"
		FROM t_tz_loanphase lo
		left join t_tz_borrow bo on lo.LOAN_CODE=bo.credit_value_id
		left join t_tz_creditor_trade ct on lo.phase_mate_id=ct.trade_id
		where lo.MATCHING_ID=#{matchingId}
	</select>
	<!-- 通过债权推荐ID获取既有及历史债权列表 非月满盈非首期 -->
	<select id="getLoanphaseBorrowNoFrist"
		resultType="com.creditharmony.fortune.creditor.matching.view.LoanphaseBorrowView"
		parameterType="java.lang.String">
		select
		bo.credit_value_id as "creditValueId",
		bo.loan_name as "loanName",
		bo.loan_code as "loanCode",
		bo.loan_idcard as "loanIdcard",
		bo.dict_loan_type as "dictLoanType",
		bo.loan_trustee_flag as "loanTrusteeFlag",
		bo.loan_product as "loanProduct",
		bo.loan_purpose as "loanPurpose",
		bo.loan_outmoney_day as "loanOutmoneyDay",
		bo.loan_job as "loanJob",
		bo.loan_backmoney_firday as "loanBackmoneyFirday",
		bo.loan_backmoney_day as "loanBackmoneyDay",
		bo.loan_months as "loanMonths",
		bo.loan_months_surplus as "loanMonthsSurplus",
		bo.loan_backmoney_lastday as "loanBackmoneyLastday",
		bo.loan_month_rate as "loanMonthRate",
		bo.loan_value_year as "loanValueYear",
		bo.dict_loan_free_flag as "dictLoanFreeFlag",
		bo.loan_quota as "loanQuota",
		bo.loan_credit_value as "loanCreditValue",
		bo.loan_middle_man as "loanMiddleMan",
		lo.phase_number_surplus as "phaseNumberSurplus",
		lo.phase_principal_surplus as "phasePrincipalSurplus",
		la.product_rate as "productRate",
		mc.matching_borrow_quota as "matchingBorrowQuota",
		ct.trade_mate_money - (select sum(lotemp .phase_back_principal) from t_tz_loanphase
		lotemp where lotemp.phase_mate_id= ct.trade_id ) as "nyrcyzq"
		FROM t_tz_loanphase lo
		left join t_tz_creditor_trade ct on lo.phase_mate_id = ct.trade_id
		left join t_tz_matching_creditor mc on lo.MATCHING_ID = mc.MATCHING_ID
		left join T_TZ_LOAN_APPLY la on mc.lend_code = la.lend_code
		left join t_tz_borrow bo on lo.LOAN_CODE=bo.credit_value_id
		where lo.MATCHING_ID=#{matchingId}
	</select>
	<!--根据主键查询 -->
	<select id="get" parameterType="java.util.Map">

		select * from tz.t_tz_loanphase where phase_id=#{phaseId};
	</select>

	<update id="update" parameterType="com.creditharmony.fortune.borrow.entity.Loanphase">
		update tz.t_tz_loanphase
		<set>
			<if test="matchingId != null">
				matching_id = #{matchingId,jdbcType=VARCHAR},
			</if>
			<if test="loanCode != null">
				loan_code = #{loanCode,jdbcType=VARCHAR},
			</if>
			<if test="lendCode != null">
				lend_code = #{lendCode,jdbcType=VARCHAR},
			</if>
			<if test="phaseNumber != null">
				phase_number = #{phaseNumber,jdbcType=INTEGER},
			</if>
			<if test="phaseAmount != null">
				phase_amount = #{phaseAmount,jdbcType=NUMERIC},
			</if>
			<if test="phaseInterestCur != null">
				phase_interest_cur = #{phaseInterestCur,jdbcType=NUMERIC},
			</if>
			<if test="phasePrincipalCur != null">
				phase_principal_cur = #{phasePrincipalCur,jdbcType=NUMERIC},
			</if>
			<if test="phasePrincipalSurplus != null">
				phase_principal_surplus = #{phasePrincipalSurplus,jdbcType=NUMERIC},
			</if>
			<if test="phaseRepaySign != null">
				phase_repay_sign = #{phaseRepaySign,jdbcType=VARCHAR},
			</if>
			<if test="phaseRepaydateActual != null">
				phase_repaydate_actual = #{phaseRepaydateActual,jdbcType=TIMESTAMP},
			</if>
			<if test="phaseBackCount != null">
				phase_back_count = #{phaseBackCount,jdbcType=NUMERIC},
			</if>
			<if test="phaseBackPrincipal != null">
				phase_back_principal = #{phaseBackPrincipal,jdbcType=NUMERIC},
			</if>
			<if test="phaseBackInterest != null">
				phase_back_interest = #{phaseBackInterest,jdbcType=NUMERIC},
			</if>
			<if test="phaseBegindayCur != null">
				phase_beginday_cur = #{phaseBegindayCur,jdbcType=TIMESTAMP},
			</if>
			<if test="phaseEnddayCur != null">
				phase_endday_cur = #{phaseEnddayCur,jdbcType=TIMESTAMP},
			</if>
			<if test="phaseMateId != null">
				phase_mate_id = #{phaseMateId,jdbcType=VARCHAR},
			</if>
			<if test="phaseMateNumber != null">
				phase_mate_number = #{phaseMateNumber,jdbcType=INTEGER},
			</if>
			<if test="phaseNumberSurplus != null">
				phase_number_surplus = #{phaseNumberSurplus,jdbcType=INTEGER},
			</if>
			<if test="phaseDiscardStatus != null">
				phase_discard_status = #{phaseDiscardStatus,jdbcType=VARCHAR},
			</if>
			<if test="phaseReleaseStatus != null">
				phase_release_status = #{phaseReleaseStatus,jdbcType=VARCHAR},
			</if>
			<if test="phaseFreezeNextstatus != null">
				phase_freeze_nextstatus = #{phaseFreezeNextstatus,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyBy != null">
				modify_by = #{modifyBy,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<where>
			<if test="phaseId != null and phaseId !=''">
				phase_id = #{phaseId,jdbcType=VARCHAR}
			</if>
			<if test="lendCode !=null and lendCode !=''">
				and lend_code = #{lendCode,jdbcType=VARCHAR}
				<!-- and phase_number = (SELECT MAX(phase_number) FROM tz.t_tz_loanphase
				WHERE lend_code = #{lendCode,jdbcType=VARCHAR}) -->
			</if>
			<if test="phaseMateId !=null and phaseMateId !=''">
				and phase_mate_id = #{phaseMateId,jdbcType=VARCHAR}
			</if>
			<if test="phaseNumber != null and phaseNumber != '' ">
				and phase_number = ${phaseNumber}
			</if>
			<if test="matchingId != null and matchingId != ''">
				and matching_id = #{matchingId,jdbcType=VARCHAR}
			</if>
			<if test="loanCode != null and loanCode != ''">
				and loan_code = #{loanCode,jdbcType=VARCHAR}
			</if>
		</where>
	</update>

	<select id="getLastloanphase" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT
		phase_id,
		matching_id,
		loan_code,
		lend_code,
		phase_number,
		phase_amount,
		phase_interest_cur,
		phase_principal_cur,
		phase_principal_surplus,
		phase_repay_sign,
		phase_repaydate_actual,
		phase_back_count,
		phase_back_principal,
		phase_back_interest,
		phase_beginday_cur,
		phase_endday_cur,
		phase_mate_id,
		phase_mate_number,
		phase_number_surplus,
		phase_discard_status,
		phase_release_status,
		phase_freeze_nextstatus,
		create_by,
		create_time,
		modify_by,
		modify_time,
		bill_day
		FROM
		T_TZ_LOANPHASE t
		WHERE
		t.phase_id =(
		SELECT
		oldt.phase_id
		FROM
		T_TZ_LOANPHASE oldt
		WHERE
		oldt.lend_code = #{lendCode}
		AND oldt.loan_code = #{creditValueId}
		ORDER BY
		oldt.phase_number DESC limit 1
		)

	</select>
	<!-- 获取上期的matching_id -->
	<select id="getLastMatchingId" resultType="java.lang.String" parameterType="java.util.Map">
		SELECT matching_id
		FROM t_tz_matching_creditor
		WHERE lend_code = #{lendCode}
			AND matching_now = #{matchingNow}
	</select>
	<select id="findList" resultMap="BaseResultMap"
		parameterType="com.creditharmony.fortune.borrow.entity.Loanphase">
		SELECT
		phase_id,
		matching_id,
		loan_code,
		lend_code,
		phase_number,
		phase_amount,
		phase_interest_cur,
		phase_principal_cur,
		phase_principal_surplus,
		phase_repay_sign,
		phase_repaydate_actual,
		phase_back_count,
		phase_back_principal,
		phase_back_interest,
		phase_beginday_cur,
		phase_endday_cur,
		phase_mate_id,
		phase_mate_number,
		phase_number_surplus,
		phase_discard_status,
		phase_release_status,
		phase_freeze_nextstatus,
		create_by,
		create_time,
		modify_by,
		modify_time,
		bill_day
		FROM tz.T_TZ_LOANPHASE where lend_code = #{lendCode}
		<if test="phaseNumber!=null ">
		and phase_number=#{phaseNumber}
		</if>
		<if test="phaseDiscardStatus!=null and phaseDiscardStatus!=''">
		 and phase_discard_status !=#{phaseDiscardStatus}
		</if>
		
		 
	</select>
	<!--查询最大期数 -->
	<select id="findMaxPhaseNumber" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select max(phase_number) from tz.t_tz_loanphase
		<where>
			<if test="loanCode != null and loanCode != '' ">
				and loan_code = #{loanCode}
			</if>
			<if test="lendCode != null and lendCode != '' ">
				and lend_code = #{lendCode}
			</if>
			<if test="phaseMateId != null and phaseMateId != '' ">
				and phase_mate_id = #{phaseMateId}
			</if>
		</where>
	</select>
	<!--查询最小期数的分期收益  -->
	<select id="findMinPhaseNumberLoanphase" parameterType="java.util.Map"
		resultType="com.creditharmony.fortune.borrow.entity.Loanphase">
		select * From tz.t_tz_loanphase where phase_number In (select MIN(phase_number) from tz.t_tz_loanphase
		<where>
			<if test="loanCode != null and loanCode != '' ">
				and loan_code = #{loanCode}
			</if>
			<if test="lendCode != null and lendCode != '' ">
				and lend_code = #{lendCode}
			</if>
			<if test="phaseMateId != null and phaseMateId != '' ">
				and phase_mate_id = #{phaseMateId}
			</if>
			<if test="phaseDiscardStatus != null and phaseDiscardStatus != '' ">
				and phase_discard_status = #{phaseDiscardStatus}
			</if>
		</where>)
		and 1=1
		<if test="loanCode != null and loanCode != '' ">
			and loan_code = #{loanCode}
		</if>
		<if test="lendCode != null and lendCode != '' ">
			and lend_code = #{lendCode}
		</if>
		<if test="phaseMateId != null and phaseMateId != '' ">
			and phase_mate_id = #{phaseMateId}
		</if>
		<if test="phaseDiscardStatus != null and phaseDiscardStatus != '' ">
			and phase_discard_status = #{phaseDiscardStatus}
		</if>
	</select>
	<update id="redeemUpdateStatus" parameterType="com.creditharmony.fortune.borrow.entity.Loanphase">
		UPDATE 
			t_tz_loanphase
		<set>
			<if test="phaseDiscardStatus != null and phaseDiscardStatus != ''">
				phase_discard_status=#{phaseDiscardStatus}, 
			</if>
			<if test="phaseReleaseStatus != null and phaseReleaseStatus != ''">
				phase_release_status=#{phaseReleaseStatus}, 
			</if>
			<if test="modifyBy != null and modifyBy != ''">
				modify_by=#{modifyBy}, 
			</if>
			<if test="modifyTime != null and modifyTime != ''">
				modify_time=#{modifyTime}
			</if>
		</set>
		WHERE 
			matching_id= #{matchingId};
	</update>
	
	<select id="getLoanphasebyMatchingId" resultType="com.creditharmony.fortune.borrow.entity.Loanphase">
		SELECT *
		FROM 
			t_tz_loanphase
		WHERE
			matching_id= #{matchingId}
			and phase_discard_status = #{phaseDiscardStatus}
			<if test="loanCodes !=null and loanCodes != '' ">
 	 		AND loan_code not in 
	 	 		<foreach collection="loanCodes" index="index" item="item" open="(" separator="," close=")">  
	            	#{item}   
	    		</foreach> 
 	 		</if>
	</select>
	
	<select id="getTotalInterest" parameterType="com.creditharmony.fortune.creditor.matching.entity.MatchingCreditor" resultType="decimal">
		SELECT
		    SUM(phase_interest_cur)
		FROM
		    T_TZ_LOANPHASE
		WHERE
		    matching_id IN(
		        SELECT
		            matching_id
		        FROM
		            T_TZ_MATCHING_CREDITOR
		        WHERE
		            lend_code = #{lendCode}
		            AND matching_expire_day <![CDATA[ <= ]]> #{matchingExpireDay}
		    )
	</select>
	
		<!--根据主键查询 -->
	<select id="getForUpdate" parameterType="com.creditharmony.fortune.borrow.entity.Loanphase"
		resultType="com.creditharmony.fortune.borrow.entity.Loanphase">
		select * from tz.t_tz_loanphase 
		<where>
			<if test="phaseId != null and phaseId !=''">
				phase_id = #{phaseId,jdbcType=VARCHAR}
			</if>
			<if test="lendCode !=null and lendCode !=''">
				and lend_code = #{lendCode,jdbcType=VARCHAR}
				and phase_number = (SELECT MAX(phase_number) FROM tz.t_tz_loanphase
				WHERE lend_code = #{lendCode,jdbcType=VARCHAR})
			</if>
			<if test="phaseMateId !=null and phaseMateId !=''">
				and phase_mate_id = #{phaseMateId,jdbcType=VARCHAR}
			</if>
			<if test="phaseNumber != null and phaseNumber != '' ">
				and phase_number = ${phaseNumber}
			</if>
			<if test="matchingId != null and matchingId != ''">
				and matching_id = #{matchingId,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<delete id="delete" parameterType="com.creditharmony.fortune.borrow.entity.Loanphase">
		delete from  tz.t_tz_loanphase
		<where>
			matching_id = #{matchingId,jdbcType=VARCHAR}
			<if test="lendCode != null and lendCode !='' ">
				and lend_code = #{lendCode,jdbcType=VARCHAR}
			</if>
			<if test="loanCode != null and loanCode !='' ">
				and loan_code = #{loanCode,jdbcType=VARCHAR}
			</if>
		</where>
	</delete>
	
	<delete id="deleteByMatchingId" parameterType="com.creditharmony.fortune.borrow.entity.Loanphase">
		DELETE
		FROM
		    tz.t_tz_loanphase
		WHERE
		    matching_id = #{matchingId,jdbcType=VARCHAR}
	</delete>
</mapper>